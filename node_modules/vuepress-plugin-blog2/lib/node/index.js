import{createPage as P,preparePageComponent as B,preparePageData as V,preparePagesComponents as A,preparePagesData as G,preparePagesRoutes as K}from"@vuepress/core";import{watch as j}from"chokidar";import{Logger as F,keys as J,isString as U,isFunction as L,removeLeadingSlash as D,checkVersion as z,getPageExcerpt as W,addViteSsrNoExternal as q}from"vuepress-shared/node";import{colors as u}from"@vuepress/utils";const C="vuepress-plugin-blog2",s=new F(C),N=({options:t,pages:b},d)=>{const $=J(t.locales),m={};return($.length?$:["/"]).forEach(a=>{m[a]=[]}),b.filter(d).forEach(a=>{a.path!=="/404.html"&&m[a.pathLocale].push(a)}),m},Q=`
if (import.meta.webpackHot) {
  import.meta.webpackHot.accept();
  if (__VUE_HMR_RUNTIME__.updateBlogCategory)
    __VUE_HMR_RUNTIME__.updateBlogCategory(categoryMap);
}

if (import.meta.hot)
  import.meta.hot.accept(({ categoryMap }) => {
    __VUE_HMR_RUNTIME__.updateBlogCategory(categoryMap);
  });

`,O=(t,{category:b,slugify:d},$,m=!1)=>Promise.all(b.map(async({key:a,getter:f,sorter:k=()=>-1,path:l="/:key/",layout:_="Layout",frontmatter:E=()=>({}),itemPath:v="/:key/:name/",itemLayout:M="Layout",itemFrontmatter:w=()=>({})},g)=>{if(!U(a)||!a.length)return s.error(`Invalid ${u.magenta("key")} option ${u.cyan(a)} in ${u.cyan(`category[${g}]`)}`),null;if(!L(f))return s.error(`Invalid ${u.magenta("getter")} option in "${u.cyan(`category[${g}]`)}", it should be a function!`),null;t.env.isDebug&&s.info(`Generating ${u.cyan(a)} category.
`);const e={},c=[],o=L(v)?v:U(v)?p=>v.replace(/:key/g,d(a)).replace(/:name/g,d(p)):()=>null;for(const p in $){if(l){const r=`${p}${D(l.replace(/:key/g,d(a)))}`,i=await P(t,{path:encodeURI(r),frontmatter:{...E(p),blog:{type:"category",key:a},layout:_}}),n=t.pages.findIndex(({path:h})=>h===r);n===-1?t.pages.push(i):t.pages[n].key!==i.key&&(t.pages.splice(n,1,i),m&&s.warn(`Overriding existed path ${u.cyan(r)}`)),c.push(i.key),e[p]={path:i.path,map:{}}}else e[p]={path:"",map:{}};const{map:y}=e[p],x={};for(const r of $[p]){const i=f(r);for(const n of i){if(!y[n]){const h=o(n);if(h){const T=`${p}${D(h)}`,R=await P(t,{path:`${p}${D(h)}`,frontmatter:{...w(n,p),blog:{type:"category",name:n,key:a},layout:M}}),I=t.pages.findIndex(({path:H})=>H===T);I===-1?t.pages.push(R):t.pages[I].key!==R.key&&(t.pages.splice(I,1,R),m&&s.warn(`Overriding existed path ${T}`)),c.push(R.key),y[n]={path:R.path,keys:[]}}else y[n]={path:"",keys:[]};x[n]=[]}x[n].push(r)}}for(const r in x)y[r].keys=x[r].sort(k).map(({key:i})=>i);if(t.env.isDebug){let r=`Route ${p} in ${a} category:
`;for(const i in y){const{path:n,keys:h}=y[i];r+=`name: ${i}; ${n?`path: ${n}; `:""}items: ${h.length}
`}s.info(r)}}return{key:a,map:e,pageKeys:c}})).then(async a=>{const f={},k=[];return a.filter(l=>l!==null).forEach(({key:l,map:_,pageKeys:E})=>{f[l]=_,k.push(...E)}),await t.writeTemp("blog/category.js",`export const categoryMap = ${JSON.stringify(f)};
${t.env.isDev?Q:""}
`),t.env.isDebug&&s.info("All categories generated."),k}),X=t=>{"customElement"in t&&(s.warn(`${u.magenta("customElement")} is deprecated, please use ${u.magenta("isCustomElement")}.`),t.isCustomElement=t.customElement)},Y=`
if (import.meta.webpackHot) {
  import.meta.webpackHot.accept();
  if (__VUE_HMR_RUNTIME__.updateBlogType)
    __VUE_HMR_RUNTIME__.updateBlogType(typeMap);
}

if (import.meta.hot)
  import.meta.hot.accept(({ typeMap }) => {
    __VUE_HMR_RUNTIME__.updateBlogType(typeMap);
  });
`,S=(t,{type:b,slugify:d},$,m=!1)=>Promise.all(b.map(async({key:a,sorter:f=()=>-1,filter:k=()=>!0,path:l="/:key/",layout:_="Layout",frontmatter:E=()=>({})},v)=>{if(!U(a)||!a.length)return s.error(`Invalid ${u.magenta("key")} option ${u.cyan(a)} in ${u.cyan(`type[${v}]`)}`),null;const M={},w=[];t.env.isDebug&&s.info(`Generating ${u.cyan(a)} type.
`);for(const g in $){const e=$[g].filter(k).sort(f).map(({key:c})=>c);if(l){const c=`${g}${D(d(l.replace(/:key/g,a)))}`,o=await P(t,{path:encodeURI(c),frontmatter:{...E(g),blog:{type:"type",key:a},layout:_}}),p=t.pages.findIndex(({path:y})=>y===c);p===-1?t.pages.push(o):t.pages[p].key!==o.key&&(t.pages.splice(p,1,o),m&&s.warn(`Overriding existed path ${u.cyan(c)}`)),w.push(o.key),M[g]={path:o.path,keys:e},t.env.isDebug&&s.info(`Route ${g} in ${a} type: path: ${o.path}; items: ${e.length}
`)}else M[g]={path:"",keys:e},t.env.isDebug&&s.info(`Route ${g} in ${a} type: items: ${e.length}
`)}return{key:a,map:M,pageKeys:w}})).then(async a=>{const f={},k=[];return a.filter(l=>l!==null).forEach(({key:l,map:_,pageKeys:E})=>{f[l]=_,k.push(...E)}),await t.writeTemp("blog/type.js",`export const typeMap = ${JSON.stringify(f)};
${t.env.isDev?Y:""}
`),t.env.isDebug&&s.info("All types generated."),k}),Z=(t,b=!0)=>d=>{b&&X(t),z(d,C,"2.0.0-rc.0");const{getInfo:$=()=>({}),filter:m=e=>!!e.filePathRelative&&!e.frontmatter.home,metaScope:a="_blog",excerpt:f=!0,excerptSeparator:k="<!-- more -->",excerptLength:l=300,excerptFilter:_=m,isCustomElement:E=()=>!1,category:v=[],type:M=[],slugify:w=e=>e.replace(/[ _]/g,"-").replace(/[:?*|\\/<>]/g,"").toLowerCase()}=t;let g=[];return d.env.isDebug&&s.info("Options:",t),{name:C,define:()=>({BLOG_META_SCOPE:a}),extendsPage:e=>{f&&_(e)&&(e.data.excerpt=W(d,e,{isCustomElement:E,excerptSeparator:k,excerptLength:l}))},extendsBundlerOptions:(e,c)=>{q(e,c,"vuepress-shared")},onInitialized:e=>{const c=N(e,m);return e.pages.filter(m).forEach(o=>{o.routeMeta={...a===""?$(o):{[a]:$(o)},...o.routeMeta}}),Promise.all([O(e,{category:v,slugify:w},c,!0).then(o=>{g.push(...o)}),S(e,{type:M,slugify:w},c,!0).then(o=>{g.push(...o)})]).then(()=>{e.env.isDebug&&s.info("temp file generated")})},onWatched:(e,c)=>{if("hotReload"in t?t.hotReload:e.env.isDebug){const o=j("pages/**/*.js",{cwd:e.dir.temp(),ignoreInitial:!0}),p=()=>{const y=[],x=N(e,m);return Promise.all([O(e,{category:v,slugify:w},x).then(r=>{y.push(...r)}),S(e,{type:M,slugify:w},x).then(r=>{y.push(...r)})]).then(async()=>{const r=g.filter(n=>!y.includes(n)),i=y.filter(n=>!g.includes(n));i.length&&(e.env.isDebug&&s.info(`New pages detected: ${i.toString()}`),await Promise.all(i.map(async n=>{await B(e,e.pages.find(({key:h})=>h===n)),await V(e,e.pages.find(({key:h})=>h===n))}))),r.length&&(e.env.isDebug&&s.info(`Removing following pages: ${r.toString()}`),r.forEach(n=>{e.pages.splice(e.pages.findIndex(({key:h})=>h===n),1)})),(r.length||i.length)&&(await A(e),await G(e),await K(e)),g=y,e.env.isDebug&&s.info("temp file updated")})};o.on("add",()=>{p()}),o.on("change",()=>{p()}),o.on("unlink",()=>{p()}),c.push(o)}}}};export{Z as blogPlugin};
//# sourceMappingURL=index.js.map
