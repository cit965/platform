import b from"markdown-it/lib/token.js";const h=(e,s,l)=>{const t=e.attrIndex(s),n=[s,l];t<0?e.attrPush(n):e.attrs[t]=n},k=(e,s)=>{const l=e[s].level-1;for(let t=s-1;t>=0;t--)if(e[t].level===l)return t;return-1},d=e=>e?.type==="inline",u=e=>e?.type==="paragraph_open",p=e=>e?.type==="list_item_open",x=e=>/^\[[xX \u00A0]\][ \u00A0]/.test(e.content),C=(e,s)=>d(e[s])&&u(e[s-1])&&p(e[s-2])&&x(e[s]),m=(e,s,{checkboxClass:l,disabled:t})=>{const n=new b("checkbox_input","input",0);return n.attrs=[["type","checkbox"],["class",l],["id",s]],/^\[[xX]\][ \u00A0]/.test(e.content)&&n.attrs.push(["checked","checked"]),t&&n.attrs.push(["disabled","disabled"]),n},f=(e,s)=>{const l=new b("label_open","label",1);return l.attrs=[["class",s],["for",e]],l},g=()=>new b("label_close","label",-1),_=(e,s,{disabled:l,checkboxClass:t,label:n,labelClass:o})=>{const c=`task-item-${s.env.tasklists++}`;e.children=e.children||[],e.children[0].content=e.children[0].content.slice(3),n&&(e.children.unshift(f(c,o)),e.children.push(g())),e.children.unshift(m(e,c,{checkboxClass:t,disabled:l}))},v=(e,{disabled:s=!0,label:l=!0,containerClass:t="task-list-container",itemClass:n="task-list-item",checkboxClass:o="task-list-item-checkbox",labelClass:c="task-list-item-label"}={})=>{e.core.ruler.after("inline","github-task-lists",r=>{const a=r.tokens;r.env.tasklists||(r.env.tasklists=0);for(let i=2;i<a.length;i++)C(a,i)&&(_(a[i],r,{disabled:s,label:l,checkboxClass:o,labelClass:c}),h(a[i-2],"class",n),h(a[k(a,i-2)],"class",t));return!0})};export{v as tasklist};
//# sourceMappingURL=index.mjs.map
