"use strict";var b=require("markdown-it/lib/token.js");const k=(s,e,l)=>{const t=s.attrIndex(e),a=[e,l];t<0?s.attrPush(a):s.attrs[t]=a},h=(s,e)=>{const l=s[e].level-1;for(let t=e-1;t>=0;t--)if(s[t].level===l)return t;return-1},d=s=>s?.type==="inline",u=s=>s?.type==="paragraph_open",p=s=>s?.type==="list_item_open",x=s=>/^\[[xX \u00A0]\][ \u00A0]/.test(s.content),C=(s,e)=>d(s[e])&&u(s[e-1])&&p(s[e-2])&&x(s[e]),f=(s,e,{checkboxClass:l,disabled:t})=>{const a=new b("checkbox_input","input",0);return a.attrs=[["type","checkbox"],["class",l],["id",e]],/^\[[xX]\][ \u00A0]/.test(s.content)&&a.attrs.push(["checked","checked"]),t&&a.attrs.push(["disabled","disabled"]),a},m=(s,e)=>{const l=new b("label_open","label",1);return l.attrs=[["class",e],["for",s]],l},g=()=>new b("label_close","label",-1),v=(s,e,{disabled:l,checkboxClass:t,label:a,labelClass:o})=>{const c=`task-item-${e.env.tasklists++}`;s.children=s.children||[],s.children[0].content=s.children[0].content.slice(3),a&&(s.children.unshift(m(c,o)),s.children.push(g())),s.children.unshift(f(s,c,{checkboxClass:t,disabled:l}))},_=(s,{disabled:e=!0,label:l=!0,containerClass:t="task-list-container",itemClass:a="task-list-item",checkboxClass:o="task-list-item-checkbox",labelClass:c="task-list-item-label"}={})=>{s.core.ruler.after("inline","github-task-lists",r=>{const n=r.tokens;r.env.tasklists||(r.env.tasklists=0);for(let i=2;i<n.length;i++)C(n,i)&&(v(n[i],r,{disabled:e,label:l,checkboxClass:o,labelClass:c}),k(n[i-2],"class",a),k(n[h(n,i-2)],"class",t));return!0})};exports.tasklist=_;
//# sourceMappingURL=index.cjs.map
