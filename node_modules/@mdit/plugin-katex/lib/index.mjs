import{createRequire as d}from"node:module";import{tex as w}from"@mdit/plugin-tex";const a=e=>e.replace(/&/gu,"&amp;").replace(/</gu,"&lt;").replace(/>/gu,"&gt;").replace(/"/gu,"&quot;").replace(/'/gu,"&#039;"),s=d(import.meta.url),y=(e,o,r)=>{try{return o.renderToString(e,{...r,displayMode:!1})}catch(t){return r.throwOnError&&console.warn(t),`<span class='katex-error' title='${a(t.toString())}'>${a(e)}</span>`}},S=(e,o,r)=>{try{return`<p class='katex-block'>${o.renderToString(e,{...r,displayMode:!0})}</p>
`}catch(t){return r.throwOnError&&console.warn(t),`<p class='katex-block katex-error' title='${a(t.toString())}'>${a(e)}</p>
`}},$=(e,o={})=>{const{allowInlineWithSpace:r=!1,mathFence:t=!1,mhchem:i=!1,logger:p=n=>n==="newLineInDisplayMode"?"ignore":"warn",...u}=o;try{const n=s("katex");i&&s("katex/contrib/mhchem"),e.use(w,{allowInlineWithSpace:r,mathFence:t,render:(c,h,g)=>{const l={strict:(m,k,x)=>p(m,k,x,g)??"ignore",throwOnError:!1,...u};return h?S(c,n,l):y(c,n,l)}})}catch{console.error('[@mdit/plugin-katex]: You should install "katex"!')}};export{$ as katex};
//# sourceMappingURL=index.mjs.map
