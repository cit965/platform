{"version":3,"file":"index.js","sources":["../../src/node/locales.ts","../../src/node/readingTime.ts","../../src/node/utils.ts","../../src/node/plugin.ts","../../src/node/use.ts"],"sourcesContent":["import type { ReadingTimeLocaleConfig } from \"../shared/index.js\";\n\n/**\n * Default locale config for `vuepress-plugin-reading-time2` plugin\n */\nexport const readingTimeLocales: ReadingTimeLocaleConfig = {\n  \"/en/\": {\n    word: \"About $word words\",\n    less1Minute: \"Less than 1 minute\",\n    time: \"About $time min\",\n  },\n\n  \"/zh/\": {\n    word: \"约 $word 字\",\n    less1Minute: \"小于 1 分钟\",\n    time: \"大约 $time 分钟\",\n  },\n\n  \"/zh-tw/\": {\n    word: \"約 $word 字\",\n    less1Minute: \"小於 1 分鐘\",\n    time: \"大约 $time 分鐘\",\n  },\n\n  \"/de/\": {\n    word: \"Ungefähr $word Wörter\",\n    less1Minute: \"Weniger als eine Minute\",\n    time: \"Ungefähr $time min\",\n  },\n\n  \"/de-at/\": {\n    word: \"Um die $word Wörter\",\n    less1Minute: \"Weniger als eine Minute\",\n    time: \"Ungefähr $time min\",\n  },\n\n  \"/vi/\": {\n    word: \"Khoảng $word từ\",\n    less1Minute: \"Ít hơn 1 phút\",\n    time: \"Khoảng $time phút\",\n  },\n\n  \"/uk/\": {\n    word: \"Про $word слова\",\n    less1Minute: \"Менше 1 хвилини\",\n    time: \"Приблизно $time хв\",\n  },\n\n  \"/ru/\": {\n    word: \"Около $word слов\",\n    less1Minute: \"Меньше 1 минуты\",\n    time: \"Около $time мин\",\n  },\n\n  \"/br/\": {\n    word: \"Por volta de $word palavras\",\n    less1Minute: \"Menos de 1 minuto\",\n    time: \"Por volta de $time min\",\n  },\n\n  \"/pl/\": {\n    word: \"Około $word słów\",\n    less1Minute: \"Mniej niż 1 minuta\",\n    time: \"Około $time minut\",\n  },\n\n  \"/sk/\": {\n    word: \"Okolo $word slov\",\n    less1Minute: \"Menej ako 1 minúta\",\n    time: \"Okolo $time minút\",\n  },\n\n  \"/fr/\": {\n    word: \"Environ $word mots\",\n    less1Minute: \"Moins de 1 minute\",\n    time: \"Environ $time min\",\n  },\n\n  \"/es/\": {\n    word: \"Alrededor de $word palabras\",\n    less1Minute: \"Menos de 1 minuto\",\n    time: \"Alrededor de $time min\",\n  },\n\n  \"/ja/\": {\n    word: \"$word字程度\",\n    less1Minute: \"1分以内\",\n    time: \"約$time分\",\n  },\n\n  \"/tr/\": {\n    word: \"Yaklaşık $word kelime\",\n    less1Minute: \"1 dakikadan az\",\n    time: \"Yaklaşık $time dakika\",\n  },\n\n  \"/ko/\": {\n    word: \"약 $word 단어\",\n    less1Minute: \"1분 미만\",\n    time: \"약 $time 분\",\n  },\n\n  \"/fi/\": {\n    word: \"Noin $word sanaa\",\n    less1Minute: \"Alle minuutti\",\n    time: \"Noin $time minuuttia\",\n  },\n\n  \"/hu/\": {\n    word: \"Körülbelül $word szó\",\n    less1Minute: \"Kevesebb, mint 1 perc\",\n    time: \"Körülbelül $time perc\",\n  },\n\n  \"/id/\": {\n    word: \"Sekitar $word kata\",\n    less1Minute: \"Kurang dari 1 menit\",\n    time: \"Sekitar $time menit\",\n  },\n\n  \"/nl/\": {\n    word: \"Ongeveer $word woorden\",\n    less1Minute: \"Minder dan 1 minuut\",\n    time: \"Ongeveer $time minuten\",\n  },\n};\n","import type { ReadingTime } from \"../shared/index.js\";\n\n/**\n * Extract Latin words from content\n */\nexport const getWords = (content: string): RegExpMatchArray | null =>\n  // \\u00C0-\\u024F are Latin Supplement letters, maybe used in language like french\n  // \\u0400-\\u04FF are Cyrillic letters, used in russian\n  // . @ / are added to ensure email and urls are not splitted\n  content.match(/[\\w\\d\\s\\u00C0-\\u024F\\u0400-\\u04FF.@/]+/giu);\n\n/**\n * Extract Chinese Characters from content\n */\nexport const getChinese = (content: string): RegExpMatchArray | null =>\n  content.match(/[\\u4E00-\\u9FD5]/gu);\n\n/**\n * Get word number of given string\n */\nexport const getWordNumber = (content: string): number =>\n  (getWords(content)?.reduce<number>(\n    (accumulator, word) =>\n      accumulator + (word.trim() === \"\" ? 0 : word.trim().split(/\\s+/u).length),\n    0,\n  ) || 0) + (getChinese(content)?.length || 0);\n\n/**\n * Get reading time info\n */\nexport const getReadingTime = (\n  content: string,\n  wordsPerMinute = 300,\n): ReadingTime => {\n  const words = getWordNumber(content || \"\");\n\n  return {\n    minutes: Math.round((words / wordsPerMinute) * 100) / 100,\n    words,\n  };\n};\n","import { Logger } from \"vuepress-shared/node\";\n\nexport const PLUGIN_NAME = \"vuepress-plugin-reading-time2\";\n\nexport const logger = new Logger(\"vuepress-plugin-reading-time2\");\n","import type { Page, PluginFunction } from \"@vuepress/core\";\nimport {\n  addViteSsrNoExternal,\n  checkVersion,\n  getLocales,\n} from \"vuepress-shared/node\";\n\nimport { readingTimeLocales } from \"./locales.js\";\nimport type { ReadingTimeOptions } from \"./options.js\";\nimport { getReadingTime } from \"./readingTime.js\";\nimport { PLUGIN_NAME, logger } from \"./utils.js\";\nimport type { ReadingTime } from \"../shared/index.js\";\n\n/** Reading time plugin */\nexport const readingTimePlugin =\n  (options: ReadingTimeOptions): PluginFunction =>\n  (app) => {\n    checkVersion(app, PLUGIN_NAME, \"2.0.0-rc.0\");\n\n    if (app.env.isDebug) logger.info(\"Options:\", options);\n\n    return {\n      name: PLUGIN_NAME,\n\n      define: (app): Record<string, unknown> => ({\n        READING_TIME_LOCALES: getLocales({\n          app,\n          name: PLUGIN_NAME,\n          default: readingTimeLocales,\n          config: options.locales,\n        }),\n      }),\n\n      extendsPage: (page: Page<{ readingTime?: ReadingTime }>): void => {\n        page.data.readingTime = getReadingTime(\n          page.content,\n          options.wordPerMinute || 300,\n        );\n      },\n\n      extendsBundlerOptions: (bundlerOptions: unknown, app): void => {\n        addViteSsrNoExternal(bundlerOptions, app, \"vuepress-shared\");\n      },\n    };\n  };\n","import type { App } from \"@vuepress/core\";\n\nimport type { ReadingTimeOptions } from \"./options.js\";\nimport { readingTimePlugin } from \"./plugin.js\";\n\n/**\n * Composition Api to use `vuepress-plugin-reading-time2`\n */\nexport const useReadingTimePlugin = (\n  app: App,\n  options: ReadingTimeOptions,\n): void => {\n  const { plugins } = app.pluginApi;\n\n  if (\n    plugins.every((plugin) => plugin.name !== \"vuepress-plugin-reading-time2\")\n  )\n    app.use(readingTimePlugin(options));\n};\n\n/**\n * Composition Api to remove `vuepress-plugin-reading-time2`\n */\nexport const removeReadingTimePlugin = (app: App): void => {\n  const { plugins } = app.pluginApi;\n\n  const index = plugins.findIndex(\n    (plugin) => plugin.name === \"vuepress-plugin-reading-time2\",\n  );\n\n  if (index !== -1) app.pluginApi.plugins.splice(index, 1);\n};\n"],"names":["readingTimeLocales","getWords","content","getChinese","getWordNumber","accumulator","word","getReadingTime","wordsPerMinute","words","PLUGIN_NAME","logger","Logger","readingTimePlugin","options","app","checkVersion","getLocales","page","bundlerOptions","addViteSsrNoExternal","useReadingTimePlugin","plugins","plugin","removeReadingTimePlugin","index"],"mappings":"0GAKO,MAAMA,EAA8C,CACzD,OAAQ,CACN,KAAM,oBACN,YAAa,qBACb,KAAM,iBACR,EAEA,OAAQ,CACN,KAAM,YACN,YAAa,UACb,KAAM,aACR,EAEA,UAAW,CACT,KAAM,YACN,YAAa,UACb,KAAM,aACR,EAEA,OAAQ,CACN,KAAM,wBACN,YAAa,0BACb,KAAM,oBACR,EAEA,UAAW,CACT,KAAM,sBACN,YAAa,0BACb,KAAM,oBACR,EAEA,OAAQ,CACN,KAAM,kBACN,YAAa,gBACb,KAAM,mBACR,EAEA,OAAQ,CACN,KAAM,kBACN,YAAa,kBACb,KAAM,oBACR,EAEA,OAAQ,CACN,KAAM,mBACN,YAAa,kBACb,KAAM,iBACR,EAEA,OAAQ,CACN,KAAM,8BACN,YAAa,oBACb,KAAM,wBACR,EAEA,OAAQ,CACN,KAAM,mBACN,YAAa,qBACb,KAAM,mBACR,EAEA,OAAQ,CACN,KAAM,mBACN,YAAa,qBACb,KAAM,mBACR,EAEA,OAAQ,CACN,KAAM,qBACN,YAAa,oBACb,KAAM,mBACR,EAEA,OAAQ,CACN,KAAM,8BACN,YAAa,oBACb,KAAM,wBACR,EAEA,OAAQ,CACN,KAAM,WACN,YAAa,OACb,KAAM,SACR,EAEA,OAAQ,CACN,KAAM,wBACN,YAAa,iBACb,KAAM,uBACR,EAEA,OAAQ,CACN,KAAM,aACN,YAAa,QACb,KAAM,WACR,EAEA,OAAQ,CACN,KAAM,mBACN,YAAa,gBACb,KAAM,sBACR,EAEA,OAAQ,CACN,KAAM,uBACN,YAAa,wBACb,KAAM,uBACR,EAEA,OAAQ,CACN,KAAM,qBACN,YAAa,sBACb,KAAM,qBACR,EAEA,OAAQ,CACN,KAAM,yBACN,YAAa,sBACb,KAAM,wBACR,CACF,ECxHaC,EAAYC,GAIvBA,EAAQ,MAAM,2CAA2C,EAK9CC,EAAcD,GACzBA,EAAQ,MAAM,mBAAmB,EAKtBE,EAAiBF,IAC3BD,EAASC,CAAO,GAAG,OAClB,CAACG,EAAaC,IACZD,GAAeC,EAAK,KAAA,IAAW,GAAK,EAAIA,EAAK,KAAK,EAAE,MAAM,MAAM,EAAE,QACpE,CACF,GAAK,IAAMH,EAAWD,CAAO,GAAG,QAAU,GAK/BK,EAAiB,CAC5BL,EACAM,EAAiB,MACD,CAChB,MAAMC,EAAQL,EAAcF,GAAW,EAAE,EAEzC,MAAO,CACL,QAAS,KAAK,MAAOO,EAAQD,EAAkB,GAAG,EAAI,IACtD,MAAAC,CACF,CACF,ECtCaC,EAAc,gCAEdC,EAAS,IAAIC,EAAO,+BAA+B,ECUnDC,EACVC,GACAC,IACCC,EAAaD,EAAKL,EAAa,YAAY,EAEvCK,EAAI,IAAI,SAASJ,EAAO,KAAK,WAAYG,CAAO,EAE7C,CACL,KAAMJ,EAEN,OAASK,IAAkC,CACzC,qBAAsBE,EAAW,CAC/B,IAAAF,EACA,KAAML,EACN,QAASV,EACT,OAAQc,EAAQ,OAClB,CAAC,CACH,GAEA,YAAcI,GAAoD,CAChEA,EAAK,KAAK,YAAcX,EACtBW,EAAK,QACLJ,EAAQ,eAAiB,GAC3B,CACF,EAEA,sBAAuB,CAACK,EAAyBJ,IAAc,CAC7DK,EAAqBD,EAAgBJ,EAAK,iBAAiB,CAC7D,CACF,GCnCSM,EAAuB,CAClCN,EACAD,IACS,CACT,KAAM,CAAE,QAAAQ,CAAQ,EAAIP,EAAI,UAGtBO,EAAQ,MAAOC,GAAWA,EAAO,OAAS,+BAA+B,GAEzER,EAAI,IAAIF,EAAkBC,CAAO,CAAC,CACtC,EAKaU,EAA2BT,GAAmB,CACzD,KAAM,CAAE,QAAAO,CAAQ,EAAIP,EAAI,UAElBU,EAAQH,EAAQ,UACnBC,GAAWA,EAAO,OAAS,+BAC9B,EAEIE,IAAU,IAAIV,EAAI,UAAU,QAAQ,OAAOU,EAAO,CAAC,CACzD"}